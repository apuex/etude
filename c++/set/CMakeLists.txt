CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(set-example)

EXECUTE_PROCESS( COMMAND uname -s COMMAND tr -d '\n' OUTPUT_VARIABLE OSNAME )
EXECUTE_PROCESS( COMMAND uname -m COMMAND tr -d '\n' OUTPUT_VARIABLE OSARCH )

SET(CMAKE_CXX_STANDARD 14)
if(${OSNAME} MATCHES "Darwin")
  SET(CMAKE_CXX_FLAGS "-fPIC -Wall")
elseif(${OSNAME} MATCHES "Linux")
  SET(CMAKE_CXX_FLAGS "-fPIC -Wall")
elseif(${OSNAME} MATCHES "WIN32")
endif()

ENABLE_TESTING()

INCLUDE_DIRECTORIES(
  include
  src
  ${DESTDIR}/include
  ${INCLUDE_DIRECTORIES}
)

LINK_DIRECTORIES(
  lib
  ${DESTDIR}/lib
  ${LINK_DIRECTORIES} 
  ${LIBRARY_OUTPUT_PATH}
)

cmake_policy(SET CMP0057 NEW)
cmake_policy(SET CMP0065 NEW)

SET(SET_EXAMPLE_SRCS
  app/set-example.c
)
ADD_EXECUTABLE(set-example ${SET_EXAMPLE_SRCS})

SET(KEY_ID_TEST_SRCS 
  test/key-id-test.cpp
)
ADD_EXECUTABLE(key-id-test ${KEY_ID_TEST_SRCS})
ADD_TEST(NAME key-id-test COMMAND key-id-test)

SET(FAIL_TEST_SRCS 
  test/fail-test.cpp
)
ADD_EXECUTABLE(fail-test ${FAIL_TEST_SRCS})
ADD_TEST(NAME fail-test COMMAND fail-test)

if(MSVC)
  ADD_DEFINITIONS(-D_WIN32_WINNT=0x0601)
endif()

