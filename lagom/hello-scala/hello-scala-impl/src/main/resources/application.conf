#
#
play.application.loader = com.example.helloscala.impl.HelloscalaLoader
play.http.secret.key = "19adde47-e445-4782-97f8-7a5e2018114d"
play.akka.actor-system = "hello-scala"

hello-scala.cassandra.keyspace = hello_scala

cassandra-journal.keyspace = ${hello-scala.cassandra.keyspace}
cassandra-snapshot-store.keyspace = ${hello-scala.cassandra.keyspace}
lagom.persistence.read-side.cassandra.keyspace = ${hello-scala.cassandra.keyspace}

cassandra.default {
  ## list the contact points  here
  contact-points = ["192.168.0.78"]
  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

# The properties below override Lagom default configuration with the recommended values for new projects.
#
# Lagom has not yet made these settings the defaults for backward-compatibility reasons.

# Prefer 'ddata' over 'persistence' to share cluster sharding state for new projects.
# See https://doc.akka.io/docs/akka/current/cluster-sharding.html#distributed-data-vs-persistence-mode
akka.cluster.sharding.state-store-mode = ddata

# Enable the serializer provided in Akka 2.5.8+ for akka.Done and other internal
# messages to avoid the use of Java serialization.
akka.actor.serialization-bindings {
  "akka.Done"                 = akka-misc
  "akka.actor.Address"        = akka-misc
  "akka.remote.UniqueAddress" = akka-misc
}

akka {
  discovery.method = config
}

akka.discovery.config.services = {
  hello-scala = {
    endpoints = [
      {
        host = "113.108.158.19"
        port = 9000
      }
    ]
  }
}

akka {
  discovery {
    method = config
    config.services = {
      hello = {
        endpoints = [
          {
            host = "192.168.0.78"
            port = 9000
          }
        ]
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    artery.untrusted-mode = off
    log-sent-messages = off

    netty.tcp {
      hostname = "192.168.0.78"
      port = 2553
      hostname = ${?HOSTNAME}
      port = ${?PORT}
    }
  }

  akka {
    actor {
      number-of-shards = 100
      provider = "akka.cluster.ClusterActorRefProvider"
    }

    cluster {
      seed-nodes = [
        "akka.tcp://hello-scala@192.168.0.78:2553"
      ]
    }
  }

}
