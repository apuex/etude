play.modules.enabled += lagom.hello.hello.impl.HelloModule
play {
  http {
    secret {
      key = "27cb8bfd-f69c-47dc-a939-7a061200e682"
      key = ${?APPLICATION_SECRET}
    }
  }
  filters {
    hosts {
      allowed = ["localhost", "192.168.0.78"]
    }
    headers {
      frameOptions = null
      xssProtection = null
      contentTypeOptions = null
      permittedCrossDomainPolicies = null
      contentSecurityPolicy = null
    }
  }
  server {
    http {
      port = 9000
    }
  }
  akka {
    actor-system = "hello"
  }
}

akka {
  discovery {
    method = config
    config.services = {
      hello = {
        endpoints = [
          {
            host = "192.168.0.78"
            port = 9000
          }
        ]
      }
    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  log-config-on-start = off
  log-dead-letters = 0
  log-dead-letters-during-shutdown = off

  actor {
    passivate-timeout = 60 seconds

//    serialization-bindings {
//      "java.io.Serializable" = none
//      "scalapb.GeneratedMessage" = hello-protobuf
//    }
  }

  alarm {
    eval-period = 5 seconds
  }

  remote {
    log-remote-lifecycle-events = off
    artery.untrusted-mode = off
    log-sent-messages = off

    netty.tcp {
      hostname = "192.168.0.78"
      port = 2553
      hostname = ${?HOSTNAME}
      port = ${?PORT}
    }
  }

  akka {
    actor {
      number-of-shards = 100
      provider = "akka.cluster.ClusterActorRefProvider"
    }

    cluster {
      seed-nodes = [
        "akka.tcp://hello@192.168.0.78:2553"
      ]
    }
  }

}

lagom.persistence.ask-timeout = 10s

hello.cassandra.keyspace = hello

cassandra-journal.keyspace = ${hello.cassandra.keyspace}
cassandra-snapshot-store.keyspace = ${hello.cassandra.keyspace}
lagom.persistence.read-side.cassandra.keyspace = ${hello.cassandra.keyspace}

cassandra.default {
  ## list the contact points  here
  contact-points = ["192.168.0.78"]
  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

# The properties below override Lagom default configuration with the recommended values for new projects.
#
# Lagom has not yet made these settings the defaults for backward-compatibility reasons.

# Prefer 'ddata' over 'persistence' to share cluster sharding state for new projects.
# See https://doc.akka.io/docs/akka/current/cluster-sharding.html#distributed-data-vs-persistence-mode
akka.cluster.sharding.state-store-mode = ddata

# Enable the serializer for akka.Done provided in Akka 2.5.8+ to avoid the use of Java serialization.
akka.actor.serialization-bindings {
  "akka.Done" = akka-misc
  "akka.actor.Address" = akka-misc
  "akka.remote.UniqueAddress" = akka-misc
}
